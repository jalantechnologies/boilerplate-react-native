name: preview_on_pr_update

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: analyze
    # only run when updating an 'Open' PR
    if: github.event.pull_request.state == 'open'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: sonarqube-scan-pullrequest
        uses: sonarsource/sonarqube-scan-action@master
        if: ${{ github.base_ref == 'main' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.pullrequest.key=${{ github.event.number }}
            -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }}
            -Dsonar.pullrequest.base=${{ github.base_ref }}
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=1000

  checks:
    runs-on: ubuntu-latest
    strategy:
      # turn off fail fast, let all the checks run irrespective of failures
      fail-fast: false
      matrix:
        check: ['yarn:lint', 'yarn:test']
    steps:
      - name: Checkout (app)
        uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: Install packages
        run: yarn install

      - name: Run check
        uses: ./.github/actions/check
        with:
          check: ${{ matrix.check }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.2'

      - name: Install Fastlane
        run: cd android && bundle install && cd ..

      - name: Install packages
        run: yarn install

      - name: Decrypt Android keys
        env:
          RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
          RELEASE_KEYSTORE_PASSPHRASE: ${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}
          RELEASE_KEYSTORE_KEY_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_KEY_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
          SERVICE_ACCOUNT_PASSPHRASE: ${{ secrets.SERVICE_ACCOUNT_PASSPHRASE }}
        run: |
          mkdir -p android/fastlane/config
          echo "$RELEASE_KEYSTORE" > upload-keystore.jks.asc
          gpg -d --passphrase="$RELEASE_KEYSTORE_PASSPHRASE" --batch upload-keystore.jks.asc > android/fastlane/config/upload-keystore.jks
          echo "$SERVICE_ACCOUNT" > service-account.json.asc
          gpg -d --passphrase="$SERVICE_ACCOUNT_PASSPHRASE" --batch service-account.json.asc > android/fastlane/config/service-account.json

      - name: Upload to PlayStore
        run: cd android && ENVFILE=../.env.staging fastlane android release_internal RELEASE_KEYSTORE_PASSWORD:${{secrets.RELEASE_KEYSTORE_PASSWORD}} RELEASE_KEYSTORE_KEY_PASSWORD:${{secrets.RELEASE_KEYSTORE_KEY_PASSWORD}} RELEASE_KEYSTORE_ALIAS:${{secrets.RELEASE_KEYSTORE_ALIAS}}
